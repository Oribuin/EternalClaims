import org.apache.tools.ant.filters.ReplaceTokens

plugins {
    id "java-library"
    id "com.github.johnrengelman.shadow" version "7.1.0"
    id "maven-publish"
}

group = 'xyz.oribuin'
version = '1.0.0'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

compileJava {
    options.compilerArgs += ['-parameters']
    options.fork = true
    options.encoding = 'UTF-8'
}
repositories {
    mavenCentral()
    mavenLocal()

    maven { url = 'https://repo.rosewooddev.io/repository/public/' }
    maven { url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/' }
    maven { url = 'https://repo.codemc.org/repository/maven-public' }
    maven { url = 'https://repo.extendedclip.com/content/repositories/placeholderapi/' }
    maven { url = 'https://repo.maven.apache.org/maven2' }
    maven { url = 'https://jitpack.io' }
    maven { url = 'https://maven.enginehub.org/repo/' }
}

dependencies {
    // Regular Dependencies
    api "dev.rosewood:rosegarden:${gardenVersion}"

    compileOnly "io.papermc.paper:paper-api:${spigotVersion}-R0.1-SNAPSHOT"
    compileOnly "org.jetbrains:annotations:23.0.0"


    // Plugin Dependencies
    compileOnly 'me.clip:placeholderapi:2.10.9'
    compileOnly 'com.github.milkbowl:vault:1.7.3'
    compileOnly 'org.black_ixx:playerpoints:3.2.5'
    compileOnly 'com.sk89q.worldguard:worldguard-bukkit:7.1.0-SNAPSHOT'
}

processResources {
    from (sourceSets.main.resources.srcDirs) {
        include '**/*.yml'
        filter ReplaceTokens, tokens: ["version": project.property("version")]
        duplicatesStrategy DuplicatesStrategy.INCLUDE
    }
}

shadowJar {
    archiveClassifier.set(null)

    relocate("dev.rosewood.rosegarden", "xyz.oribuin.eternalclaims.libs.rosegarden")

    exclude 'dev/rosewood/rosegarden/lib/hikaricp/**/*.class'
    exclude 'dev/rosewood/rosegarden/lib/slf4j/**/*.class'

}

publishing {
    publications {
        shadow(MavenPublication) { publication ->
            project.shadow.component(publication)
            artifactId = 'eternaltags'
            pom {
                name = 'eternaltags'
            }
        }
    }
    repositories {
        if (project.hasProperty('mavenUser') && project.hasProperty('mavenPassword')) {
            maven {
                credentials {
                    username project.mavenUser
                    password project.mavenPassword
                }

                def releasesRepoUrl = 'https://repo.rosewooddev.io/repository/public-releases/'
                def snapshotsRepoUrl = 'https://repo.rosewooddev.io/repository/public-snapshots/'
                url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            }
        }
    }
}

build.dependsOn shadowJar
